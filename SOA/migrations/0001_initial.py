# Generated by Django 2.2.3 on 2019-07-28 07:54

import datetime

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=15)),
                ('street', models.CharField(max_length=15)),
                ('alley', models.CharField(max_length=15, null=True)),
                ('postal_code', models.CharField(max_length=10)),
                ('plaque', models.CharField(max_length=10)),
                ('tel_phone', models.CharField(max_length=11)),
                ('fax', models.CharField(max_length=11, null=True)),
                ('details', models.CharField(max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='Arash',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_key', models.CharField(max_length=256)),
                ('serial_number', models.CharField(max_length=16)),
                ('license', models.CharField(max_length=256)),
                ('expire_date', models.DateField()),
                ('version', models.CharField(max_length=10)),
                ('purchase_date', models.DateField(default=datetime.date.today)),
            ],
            options={
                'verbose_name_plural': 'arashes',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly assigning them.',
                                                     verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'},
                                              help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                                              max_length=150, unique=True,
                                              validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                                              verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False,
                                                 help_text='Designates whether the user can log into this admin site.',
                                                 verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True,
                                                  help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                                                  verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=11)),
                ('personnel_code', models.CharField(max_length=15)),
                ('in_place', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('ad', 'admin'), ('ma', 'master')], default='ad', max_length=2)),
                ('address',
                 models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users',
                                      to='SOA.Address')),
                ('groups', models.ManyToManyField(blank=True,
                                                  help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                                                  related_name='user_set', related_query_name='user', to='auth.Group',
                                                  verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                                                            related_name='user_set', related_query_name='user',
                                                            to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem', models.TextField(max_length=256)),
                ('solve', models.TextField(max_length=256)),
                ('request_date', models.DateTimeField()),
                ('solve_date', models.DateTimeField()),
                ('arash', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests',
                                            to='SOA.Arash')),
                ('users', models.ManyToManyField(related_name='requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=25)),
                ('address', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company',
                                                 to='SOA.Address')),
            ],
            options={
                'verbose_name_plural': 'companies',
            },
        ),
        migrations.AddField(
            model_name='arash',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arashes',
                                    to='SOA.Company'),
        ),
    ]
